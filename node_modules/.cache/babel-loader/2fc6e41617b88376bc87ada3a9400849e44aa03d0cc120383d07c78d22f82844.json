{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nconst useHttp = applyData => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : 'GET',\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  }, []);\n  return {\n    isLoading: isLoading,\n    error: error,\n    sendRequest: sendRequest\n  };\n};\n_s(useHttp, \"FFcdbk+kTfFKRpY6eKN2uj4p9Os=\");\nexport default useHttp;","map":{"version":3,"names":["useCallback","useState","useHttp","applyData","_s","isLoading","setIsLoading","error","setError","sendRequest","requestConfig","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"sources":["C:/Users/ASUS/Desktop/ReactCustomHooks/src/Hooks/use-http.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\r\nconst useHttp = (applyData) => {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const sendRequest = useCallback(async (requestConfig, applyData) => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await fetch(\r\n                requestConfig.url, {\r\n                method: requestConfig.method ? requestConfig.method : 'GET',\r\n                headers: requestConfig.headers ? requestConfig.headers : {},\r\n                body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\r\n            }\r\n            );\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Request failed!');\r\n            }\r\n\r\n            const data = await response.json();\r\n            applyData(data)\r\n\r\n        } catch (err) {\r\n            setError(err.message || 'Something went wrong!');\r\n        }\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n    return {\r\n        isLoading: isLoading,\r\n        error: error,\r\n        sendRequest: sendRequest\r\n    }\r\n}\r\n\r\nexport default useHttp"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAC7C,MAAMC,OAAO,GAAIC,SAAS,IAAK;EAAAC,EAAA;EAE3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMQ,WAAW,GAAGT,WAAW,CAAC,OAAOU,aAAa,EAAEP,SAAS,KAAK;IAChEG,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CACxBF,aAAa,CAACG,GAAG,EAAE;QACnBC,MAAM,EAAEJ,aAAa,CAACI,MAAM,GAAGJ,aAAa,CAACI,MAAM,GAAG,KAAK;QAC3DC,OAAO,EAAEL,aAAa,CAACK,OAAO,GAAGL,aAAa,CAACK,OAAO,GAAG,CAAC,CAAC;QAC3DC,IAAI,EAAEN,aAAa,CAACM,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACR,aAAa,CAACM,IAAI,CAAC,GAAG;MACpE,CACA,CAAC;MAED,IAAI,CAACL,QAAQ,CAACQ,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACtC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClCnB,SAAS,CAACkB,IAAI,CAAC;IAEnB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACVf,QAAQ,CAACe,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IACpD;IACAlB,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACHD,SAAS,EAAEA,SAAS;IACpBE,KAAK,EAAEA,KAAK;IACZE,WAAW,EAAEA;EACjB,CAAC;AACL,CAAC;AAAAL,EAAA,CAnCKF,OAAO;AAqCb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}